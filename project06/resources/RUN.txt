-----------------------------------------------------
Test file: resources/inventory_log.txt

NOTES: Test to see the difference between the output
when traversing the hard tree vs the soft tree. Test
the output when and before garbage collection.
-----------------------------------------------------

Garbage collection threshold = 4


Update at line #1: add milk
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
milk:1

Testing traversing "soft" inventory:
milk:1


at line #1: add milk
First item: milk:1
Last item: milk:1


Update at line #2: add milk
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
milk:2

Testing traversing "soft" inventory:
milk:2


at line #2: add milk
First item: milk:2
Last item: milk:2


Update at line #3: add soup
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:2  soup:1

Testing traversing "soft" inventory:
milk:2  soup:1


at line #3: add soup
First item: milk:2
Last item: soup:1


Update at line #4: add soup
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:2  soup:2

Testing traversing "soft" inventory:
milk:2  soup:2


at line #4: add soup
First item: milk:2
Last item: soup:2


Update at line #5: add apples
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:1  milk:2  soup:2

Testing traversing "soft" inventory:
apples:1  milk:2  soup:2


at line #5: add apples
First item: apples:1
Last item: soup:2


Update at line #6: add tomato
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apples:1  milk:2  soup:2  tomato:1

Testing traversing "soft" inventory:
apples:1  milk:2  soup:2  tomato:1


at line #6: add tomato
First item: apples:1
Last item: tomato:1


Update at line #7: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:1

Testing traversing "soft" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:1


at line #7: add eggplant
First item: apples:1
Last item: tomato:1


Update at line #8: add avocado
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  avocado:1  eggplant:1  milk:2  soup:2  tomato:1

Testing traversing "soft" inventory:
apples:1  avocado:1  eggplant:1  milk:2  soup:2  tomato:1


at line #8: add avocado
First item: apples:1
Last item: tomato:1


Update at line #9: add tomato
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  avocado:1  eggplant:1  milk:2  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  avocado:1  eggplant:1  milk:2  soup:2  tomato:2


at line #9: add tomato
First item: apples:1
Last item: tomato:2


Update at line #10: add onion
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  avocado:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  avocado:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #10: add onion
First item: apples:1
Last item: tomato:2


Update at line #11: add beans
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:1  avocado:1  beans:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  avocado:1  beans:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #11: add beans
First item: apples:1
Last item: tomato:2


Update at line #12: add beans
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:1  avocado:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  avocado:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #12: add beans
First item: apples:1
Last item: tomato:2


Update at line #13: buy apples
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
avocado:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #13: buy apples
First item: avocado:1
Last item: tomato:2

Warning: Unable to fulfill request: at line #14: buy fish
Warning: Item fish is out of stock.

at line #14: buy fish
First item: avocado:1
Last item: tomato:2


Update at line #15: add pie
"hard" number of unique items (i.e. mSizeHard) = 9
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
avocado:1  beans:2  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:2


at line #15: add pie
First item: avocado:1
Last item: tomato:2


Update at line #16: add tomato
"hard" number of unique items (i.e. mSizeHard) = 9
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:3


at line #16: add tomato
First item: avocado:1
Last item: tomato:3


Update at line #17: add cake
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  eggplant:1  milk:2  onion:1  pie:1  soup:2  tomato:3


at line #17: add cake
First item: avocado:1
Last item: tomato:3


Update at line #18: add fish
"hard" number of unique items (i.e. mSizeHard) = 11
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3


at line #18: add fish
First item: avocado:1
Last item: tomato:3


Update at line #19: add chicken
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3


at line #19: add chicken
First item: avocado:1
Last item: tomato:3


Update at line #20: add cereal
"hard" number of unique items (i.e. mSizeHard) = 13
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3


at line #20: add cereal
First item: avocado:1
Last item: tomato:3


Update at line #21: add cookies
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:3


at line #21: add cookies
First item: avocado:1
Last item: tomato:3


Update at line #22: buy onion
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:0  pie:1  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  pie:1  soup:2  tomato:3


at line #22: buy onion
First item: avocado:1
Last item: tomato:3


Update at line #23: buy pie
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:0  pie:0  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3


at line #23: buy pie
First item: avocado:1
Last item: tomato:3


Update at line #24: buy cookies
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:0  avocado:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  milk:2  onion:0  pie:0  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3


at line #24: buy cookies
First item: avocado:1
Last item: tomato:3

at line #24: buy cookies
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3



Update at line #25: add apples
"hard" number of unique items (i.e. mSizeHard) = 11
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:1  avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
apples:1  avocado:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3


at line #25: add apples
First item: apples:1
Last item: tomato:3


Update at line #26: add basil
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  soup:2  tomato:3


at line #26: add basil
First item: apples:1
Last item: tomato:3


Update at line #27: add juice
"hard" number of unique items (i.e. mSizeHard) = 13
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  milk:2  soup:2  tomato:3


at line #27: add juice
First item: apples:1
Last item: tomato:3


Update at line #28: add juice
"hard" number of unique items (i.e. mSizeHard) = 13
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  milk:2  soup:2  tomato:3


at line #28: add juice
First item: apples:1
Last item: tomato:3


Update at line #29: add bread
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  milk:2  soup:2  tomato:3


at line #29: add bread
First item: apples:1
Last item: tomato:3


Update at line #30: add meat
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3


at line #30: add meat
First item: apples:1
Last item: tomato:3


Update at line #31: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3


at line #31: add eggplant
First item: apples:1
Last item: tomato:3


Update at line #32: add bread
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:3


at line #32: add bread
First item: apples:1
Last item: tomato:3


Update at line #33: add tomato
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:1  milk:2  soup:2  tomato:4


at line #33: add tomato
First item: apples:1
Last item: tomato:4


Update at line #34: buy meat
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:0  milk:2  soup:2  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  milk:2  soup:2  tomato:4


at line #34: buy meat
First item: apples:1
Last item: tomato:4


Update at line #35: add soup
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:0  milk:2  soup:3  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  milk:2  soup:3  tomato:4


at line #35: add soup
First item: apples:1
Last item: tomato:4


Update at line #36: add spaghetti
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  meat:0  milk:2  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  milk:2  soup:3  spaghetti:1  tomato:4


at line #36: add spaghetti
First item: apples:1
Last item: tomato:4


Update at line #37: add linguine
"hard" number of unique items (i.e. mSizeHard) = 17
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  soup:3  spaghetti:1  tomato:4


at line #37: add linguine
First item: apples:1
Last item: tomato:4


Update at line #38: add onion
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4


at line #38: add onion
First item: apples:1
Last item: tomato:4


Update at line #39: add cereal
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4


at line #39: add cereal
First item: apples:1
Last item: tomato:4


Update at line #40: add milk
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:3  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:3  onion:1  soup:3  spaghetti:1  tomato:4


at line #40: add milk
First item: apples:1
Last item: tomato:4


Update at line #41: buy milk
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4


at line #41: buy milk
First item: apples:1
Last item: tomato:4


Update at line #42: buy bread
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  meat:0  milk:2  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4


at line #42: buy bread
First item: apples:1
Last item: tomato:4


Update at line #43: buy juice
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 17

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4


at line #43: buy juice
First item: apples:1
Last item: tomato:4

Warning: Unable to fulfill request: at line #44: buy pie
Warning: Item pie is out of stock.

at line #44: buy pie
First item: apples:1
Last item: tomato:4


Update at line #45: buy chicken
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4


at line #45: buy chicken
First item: apples:1
Last item: tomato:4


State of inventory before cleanup:
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  chicken:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4



Final state of inventory after cleanup:
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4

Testing traversing "soft" inventory:
apples:1  avocado:1  basil:1  beans:2  bread:1  cake:1  cereal:2  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:4


Done with SuperMarket.



-----------------------------------------------------
Test file: resources/inventory_short.txt

NOTES: Test to show a case where user requests to buy
a few items (showing removal of an item where tree root
has both left and right children). Also test garbage
collection
-----------------------------------------------------

Garbage collection threshold = 4


Update at line #1: add soup
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
soup:1

Testing traversing "soft" inventory:
soup:1


at line #1: add soup
First item: soup:1
Last item: soup:1


Update at line #2: add tangerines
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
soup:1  tangerines:1

Testing traversing "soft" inventory:
soup:1  tangerines:1


at line #2: add tangerines
First item: soup:1
Last item: tangerines:1


Update at line #3: add turnips
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
soup:1  tangerines:1  turnips:1


at line #3: add turnips
First item: soup:1
Last item: turnips:1


Update at line #4: add milk
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
milk:1  soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
milk:1  soup:1  tangerines:1  turnips:1


at line #4: add milk
First item: milk:1
Last item: turnips:1


Update at line #5: add apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  milk:1  soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:1  milk:1  soup:1  tangerines:1  turnips:1


at line #5: add apples
First item: apples:1
Last item: turnips:1


Update at line #6: add apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:2  milk:1  soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:2  milk:1  soup:1  tangerines:1  turnips:1


at line #6: add apples
First item: apples:2
Last item: turnips:1


Update at line #7: add apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:3  milk:1  soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:3  milk:1  soup:1  tangerines:1  turnips:1


at line #7: add apples
First item: apples:3
Last item: turnips:1


Update at line #8: add bread
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:3  bread:1  milk:1  soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:3  bread:1  milk:1  soup:1  tangerines:1  turnips:1


at line #8: add bread
First item: apples:3
Last item: turnips:1


Update at line #9: buy soup
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:3  bread:1  milk:1  soup:0  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:3  bread:1  milk:1  tangerines:1  turnips:1


at line #9: buy soup
First item: apples:3
Last item: turnips:1


Update at line #10: buy milk
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apples:3  bread:1  milk:0  soup:0  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:3  bread:1  tangerines:1  turnips:1


at line #10: buy milk
First item: apples:3
Last item: turnips:1


Update at line #11: buy bread
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:3  bread:0  milk:0  soup:0  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:3  tangerines:1  turnips:1


at line #11: buy bread
First item: apples:3
Last item: turnips:1


State of inventory before cleanup:
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:3  bread:0  milk:0  soup:0  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:3  tangerines:1  turnips:1



Final state of inventory after cleanup:
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:3  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:3  tangerines:1  turnips:1


Done with SuperMarket.





-----------------------------------------------------
Test file: resources/inventory_invalid_removal.txt

NOTES: Test to show an item with count of 1 in the
inventory and user's request to buy the item twice.
-----------------------------------------------------

Garbage collection threshold = 4


Update at line #1: add soup
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
soup:1

Testing traversing "soft" inventory:
soup:1


at line #1: add soup
First item: soup:1
Last item: soup:1


Update at line #2: add tangerines
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
soup:1  tangerines:1

Testing traversing "soft" inventory:
soup:1  tangerines:1


at line #2: add tangerines
First item: soup:1
Last item: tangerines:1


Update at line #3: add turnips
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
soup:1  tangerines:1  turnips:1


at line #3: add turnips
First item: soup:1
Last item: turnips:1


Update at line #4: add milk
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
milk:1  soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
milk:1  soup:1  tangerines:1  turnips:1


at line #4: add milk
First item: milk:1
Last item: turnips:1


Update at line #5: add apples
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  milk:1  soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:1  milk:1  soup:1  tangerines:1  turnips:1


at line #5: add apples
First item: apples:1
Last item: turnips:1


Update at line #6: add bread
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  bread:1  milk:1  soup:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:1  bread:1  milk:1  soup:1  tangerines:1  turnips:1


at line #6: add bread
First item: apples:1
Last item: turnips:1


Update at line #7: buy soup
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  bread:1  milk:1  soup:0  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:1  bread:1  milk:1  tangerines:1  turnips:1


at line #7: buy soup
First item: apples:1
Last item: turnips:1

Warning: Unable to fulfill request: at line #8: buy soup
Warning: Item soup is out of stock.

at line #8: buy soup
First item: apples:1
Last item: turnips:1


State of inventory before cleanup:
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  bread:1  milk:1  soup:0  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:1  bread:1  milk:1  tangerines:1  turnips:1



Final state of inventory after cleanup:
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  bread:1  milk:1  tangerines:1  turnips:1

Testing traversing "soft" inventory:
apples:1  bread:1  milk:1  tangerines:1  turnips:1


Done with SuperMarket.







-----------------------------------------------------
Test file: resources/inventory_garbage_collector.txt

NOTES: Test to show a case where user program does
multiple garbage collections until user is left with one.
-----------------------------------------------------




Garbage collection threshold = 4


Update at line #1: add soup
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
soup:1

Testing traversing "soft" inventory:
soup:1


at line #1: add soup
First item: soup:1
Last item: soup:1


Update at line #2: add carrot
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
carrot:1  soup:1

Testing traversing "soft" inventory:
carrot:1  soup:1


at line #2: add carrot
First item: carrot:1
Last item: soup:1


Update at line #3: add tomato
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
carrot:1  soup:1  tomato:1

Testing traversing "soft" inventory:
carrot:1  soup:1  tomato:1


at line #3: add tomato
First item: carrot:1
Last item: tomato:1


Update at line #4: add banana
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
banana:1  carrot:1  soup:1  tomato:1

Testing traversing "soft" inventory:
banana:1  carrot:1  soup:1  tomato:1


at line #4: add banana
First item: banana:1
Last item: tomato:1


Update at line #5: add apple
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apple:1  banana:1  carrot:1  soup:1  tomato:1

Testing traversing "soft" inventory:
apple:1  banana:1  carrot:1  soup:1  tomato:1


at line #5: add apple
First item: apple:1
Last item: tomato:1


Update at line #6: add beans
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apple:1  banana:1  beans:1  carrot:1  soup:1  tomato:1

Testing traversing "soft" inventory:
apple:1  banana:1  beans:1  carrot:1  soup:1  tomato:1


at line #6: add beans
First item: apple:1
Last item: tomato:1


Update at line #7: add avocado
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  soup:1  tomato:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  soup:1  tomato:1


at line #7: add avocado
First item: apple:1
Last item: tomato:1


Update at line #8: add garlic
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tomato:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tomato:1


at line #8: add garlic
First item: apple:1
Last item: tomato:1


Update at line #9: add turnip
"hard" number of unique items (i.e. mSizeHard) = 9
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tomato:1  turnip:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tomato:1  turnip:1


at line #9: add turnip
First item: apple:1
Last item: turnip:1


Update at line #10: add tofu
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tofu:1  tomato:1  turnip:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tofu:1  tomato:1  turnip:1


at line #10: add tofu
First item: apple:1
Last item: turnip:1


Update at line #11: add vegetable
"hard" number of unique items (i.e. mSizeHard) = 11
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tofu:1  tomato:1  turnip:1  vegetable:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tofu:1  tomato:1  turnip:1  vegetable:1


at line #11: add vegetable
First item: apple:1
Last item: vegetable:1


Update at line #12: add yogurt
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tofu:1  tomato:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:1  tofu:1  tomato:1  turnip:1  vegetable:1  yogurt:1


at line #12: add yogurt
First item: apple:1
Last item: yogurt:1


Update at line #13: buy soup
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  soup:0  tofu:1  tomato:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:1  garlic:1  tofu:1  tomato:1  turnip:1  vegetable:1  yogurt:1


at line #13: buy soup
First item: apple:1
Last item: yogurt:1


Update at line #14: buy carrot
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:0  garlic:1  soup:0  tofu:1  tomato:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  garlic:1  tofu:1  tomato:1  turnip:1  vegetable:1  yogurt:1


at line #14: buy carrot
First item: apple:1
Last item: yogurt:1


Update at line #15: buy tomato
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:1  beans:1  carrot:0  garlic:1  soup:0  tofu:1  tomato:0  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
apple:1  avocado:1  banana:1  beans:1  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1


at line #15: buy tomato
First item: apple:1
Last item: yogurt:1


Update at line #16: buy banana
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apple:1  avocado:1  banana:0  beans:1  carrot:0  garlic:1  soup:0  tofu:1  tomato:0  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
apple:1  avocado:1  beans:1  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1


at line #16: buy banana
First item: apple:1
Last item: yogurt:1

at line #16: buy banana
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apple:1  avocado:1  beans:1  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
apple:1  avocado:1  beans:1  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1



Update at line #17: buy apple
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apple:0  avocado:1  beans:1  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
avocado:1  beans:1  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1


at line #17: buy apple
First item: avocado:1
Last item: yogurt:1


Update at line #18: buy beans
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apple:0  avocado:1  beans:0  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
avocado:1  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1


at line #18: buy beans
First item: avocado:1
Last item: yogurt:1


Update at line #19: buy avocado
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apple:0  avocado:0  beans:0  garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
garlic:1  tofu:1  turnip:1  vegetable:1  yogurt:1


at line #19: buy avocado
First item: garlic:1
Last item: yogurt:1


Update at line #20: buy garlic
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apple:0  avocado:0  beans:0  garlic:0  tofu:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
tofu:1  turnip:1  vegetable:1  yogurt:1


at line #20: buy garlic
First item: tofu:1
Last item: yogurt:1

at line #20: buy garlic
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
tofu:1  turnip:1  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
tofu:1  turnip:1  vegetable:1  yogurt:1



Update at line #21: buy turnip
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
tofu:1  turnip:0  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
tofu:1  vegetable:1  yogurt:1


at line #21: buy turnip
First item: tofu:1
Last item: yogurt:1


Update at line #22: buy tofu
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
tofu:0  turnip:0  vegetable:1  yogurt:1

Testing traversing "soft" inventory:
vegetable:1  yogurt:1


at line #22: buy tofu
First item: vegetable:1
Last item: yogurt:1


Update at line #23: buy vegetable
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
tofu:0  turnip:0  vegetable:0  yogurt:1

Testing traversing "soft" inventory:
yogurt:1


at line #23: buy vegetable
First item: yogurt:1
Last item: yogurt:1


State of inventory before cleanup:
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
tofu:0  turnip:0  vegetable:0  yogurt:1

Testing traversing "soft" inventory:
yogurt:1



Final state of inventory after cleanup:
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
tofu:0  yogurt:1

Testing traversing "soft" inventory:
yogurt:1


Done with SuperMarket.






-----------------------------------------------------
Test file: resources/inventory_threshold_two.txt

NOTES: Test to show a case where garbage collection
threshold is two.
-----------------------------------------------------




Garbage collection threshold = 2


Update at line #1: add milk
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
milk:1

Testing traversing "soft" inventory:
milk:1


at line #1: add milk
First item: milk:1
Last item: milk:1


Update at line #2: add milk
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
milk:2

Testing traversing "soft" inventory:
milk:2


at line #2: add milk
First item: milk:2
Last item: milk:2


Update at line #3: add soup
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:2  soup:1

Testing traversing "soft" inventory:
milk:2  soup:1


at line #3: add soup
First item: milk:2
Last item: soup:1


Update at line #4: add soup
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:2  soup:2

Testing traversing "soft" inventory:
milk:2  soup:2


at line #4: add soup
First item: milk:2
Last item: soup:2


Update at line #5: add apples
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:1  milk:2  soup:2

Testing traversing "soft" inventory:
apples:1  milk:2  soup:2


at line #5: add apples
First item: apples:1
Last item: soup:2


Update at line #6: add tomato
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apples:1  milk:2  soup:2  tomato:1

Testing traversing "soft" inventory:
apples:1  milk:2  soup:2  tomato:1


at line #6: add tomato
First item: apples:1
Last item: tomato:1


Update at line #7: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:1

Testing traversing "soft" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:1


at line #7: add eggplant
First item: apples:1
Last item: tomato:1


Update at line #8: add tomato
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:2


at line #8: add tomato
First item: apples:1
Last item: tomato:2


Update at line #9: add onion
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #9: add onion
First item: apples:1
Last item: tomato:2


Update at line #10: add beans
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  beans:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #10: add beans
First item: apples:1
Last item: tomato:2


Update at line #11: add beans
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #11: add beans
First item: apples:1
Last item: tomato:2


Update at line #12: add onion
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  beans:2  eggplant:1  milk:2  onion:2  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:2  eggplant:1  milk:2  onion:2  soup:2  tomato:2


at line #12: add onion
First item: apples:1
Last item: tomato:2


Update at line #13: buy apples
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:0  beans:2  eggplant:1  milk:2  onion:2  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  eggplant:1  milk:2  onion:2  soup:2  tomato:2


at line #13: buy apples
First item: beans:2
Last item: tomato:2

Warning: Unable to fulfill request: at line #14: buy fish
Warning: Item fish is out of stock.

at line #14: buy fish
First item: beans:2
Last item: tomato:2


Update at line #15: add pie
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:0  beans:2  eggplant:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  eggplant:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #15: add pie
First item: beans:2
Last item: tomato:2


Update at line #16: add cake
"hard" number of unique items (i.e. mSizeHard) = 9
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  eggplant:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  cake:1  eggplant:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #16: add cake
First item: beans:2
Last item: tomato:2


Update at line #17: add fish
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  cake:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #17: add fish
First item: beans:2
Last item: tomato:2


Update at line #18: add chicken
"hard" number of unique items (i.e. mSizeHard) = 11
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  cake:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #18: add chicken
First item: beans:2
Last item: tomato:2


Update at line #19: add cereal
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #19: add cereal
First item: beans:2
Last item: tomato:2


Update at line #20: add watermelon
"hard" number of unique items (i.e. mSizeHard) = 13
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2  watermelon:1


at line #20: add watermelon
First item: beans:2
Last item: watermelon:1


Update at line #21: add cookies
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2  watermelon:1


at line #21: add cookies
First item: beans:2
Last item: watermelon:1


Update at line #22: buy onion
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:2  watermelon:1


at line #22: buy onion
First item: beans:2
Last item: watermelon:1


Update at line #23: buy pie
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #23: buy pie
First item: beans:2
Last item: watermelon:1

at line #23: buy pie
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1



Update at line #24: buy cookies
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #24: buy cookies
First item: beans:2
Last item: watermelon:1


Update at line #25: add apples
"hard" number of unique items (i.e. mSizeHard) = 13
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #25: add apples
First item: apples:1
Last item: watermelon:1


Update at line #26: add juice
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #26: add juice
First item: apples:1
Last item: watermelon:1


Update at line #27: add bread
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #27: add bread
First item: apples:1
Last item: watermelon:1


Update at line #28: add meat
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #28: add meat
First item: apples:1
Last item: watermelon:1


Update at line #29: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #29: add eggplant
First item: apples:1
Last item: watermelon:1


Update at line #30: add bread
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #30: add bread
First item: apples:1
Last item: watermelon:1


Update at line #31: buy meat
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  meat:0  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #31: buy meat
First item: apples:1
Last item: watermelon:1

at line #31: buy meat
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1



Update at line #32: add soup
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:3  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:3  tomato:2  watermelon:1


at line #32: add soup
First item: apples:1
Last item: watermelon:1


Update at line #33: add spaghetti
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #33: add spaghetti
First item: apples:1
Last item: watermelon:1


Update at line #34: add linguine
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #34: add linguine
First item: apples:1
Last item: watermelon:1


Update at line #35: add onion
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #35: add onion
First item: apples:1
Last item: watermelon:1


Update at line #36: add cereal
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #36: add cereal
First item: apples:1
Last item: watermelon:1


Update at line #37: add milk
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:3  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:3  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #37: add milk
First item: apples:1
Last item: watermelon:1


Update at line #38: buy milk
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #38: buy milk
First item: apples:1
Last item: watermelon:1


Update at line #39: buy bread
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #39: buy bread
First item: apples:1
Last item: watermelon:1


Update at line #40: buy beans
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #40: buy beans
First item: apples:1
Last item: watermelon:1


Update at line #41: buy onion
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #41: buy onion
First item: apples:1
Last item: watermelon:1


Update at line #42: buy watermelon
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:0

Testing traversing "soft" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2


at line #42: buy watermelon
First item: apples:1
Last item: tomato:2


Update at line #43: buy bread
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:1  bread:0  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:0

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2


at line #43: buy bread
First item: apples:1
Last item: tomato:2

at line #43: buy bread
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2



Update at line #44: buy fish
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:0  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2


at line #44: buy fish
First item: apples:1
Last item: tomato:2


Update at line #45: buy juice
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:0  juice:0  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2


at line #45: buy juice
First item: apples:1
Last item: tomato:2

at line #45: buy juice
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2



Update at line #46: buy milk
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:1  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:1  onion:1  soup:3  spaghetti:1  tomato:2


at line #46: buy milk
First item: apples:1
Last item: tomato:2


Update at line #47: buy beans
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:1  beans:0  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:1  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:1  onion:1  soup:3  spaghetti:1  tomato:2


at line #47: buy beans
First item: apples:1
Last item: tomato:2


Update at line #48: buy milk
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:1  beans:0  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:0  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:1  soup:3  spaghetti:1  tomato:2


at line #48: buy milk
First item: apples:1
Last item: tomato:2

at line #48: buy milk
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:1  soup:3  spaghetti:1  tomato:2



Update at line #49: buy onion
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:0  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  soup:3  spaghetti:1  tomato:2


at line #49: buy onion
First item: apples:1
Last item: tomato:2


State of inventory before cleanup:
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:0  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  soup:3  spaghetti:1  tomato:2



Final state of inventory after cleanup:
"hard" number of unique items (i.e. mSizeHard) = 9
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  soup:3  spaghetti:1  tomato:2


Done with SuperMarket.









-----------------------------------------------------
Test file: resources/inventory_threshold_five.txt

NOTES: Test to show a case where garbage collection
threshold is five.
-----------------------------------------------------



Garbage collection threshold = 5


Update at line #1: add milk
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
milk:1

Testing traversing "soft" inventory:
milk:1


at line #1: add milk
First item: milk:1
Last item: milk:1


Update at line #2: add milk
"hard" number of unique items (i.e. mSizeHard) = 1
"soft" number of unique items (i.e. mSize) = 1

Testing traversing "hard" inventory:
milk:2

Testing traversing "soft" inventory:
milk:2


at line #2: add milk
First item: milk:2
Last item: milk:2


Update at line #3: add soup
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:2  soup:1

Testing traversing "soft" inventory:
milk:2  soup:1


at line #3: add soup
First item: milk:2
Last item: soup:1


Update at line #4: add soup
"hard" number of unique items (i.e. mSizeHard) = 2
"soft" number of unique items (i.e. mSize) = 2

Testing traversing "hard" inventory:
milk:2  soup:2

Testing traversing "soft" inventory:
milk:2  soup:2


at line #4: add soup
First item: milk:2
Last item: soup:2


Update at line #5: add apples
"hard" number of unique items (i.e. mSizeHard) = 3
"soft" number of unique items (i.e. mSize) = 3

Testing traversing "hard" inventory:
apples:1  milk:2  soup:2

Testing traversing "soft" inventory:
apples:1  milk:2  soup:2


at line #5: add apples
First item: apples:1
Last item: soup:2


Update at line #6: add tomato
"hard" number of unique items (i.e. mSizeHard) = 4
"soft" number of unique items (i.e. mSize) = 4

Testing traversing "hard" inventory:
apples:1  milk:2  soup:2  tomato:1

Testing traversing "soft" inventory:
apples:1  milk:2  soup:2  tomato:1


at line #6: add tomato
First item: apples:1
Last item: tomato:1


Update at line #7: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:1

Testing traversing "soft" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:1


at line #7: add eggplant
First item: apples:1
Last item: tomato:1


Update at line #8: add tomato
"hard" number of unique items (i.e. mSizeHard) = 5
"soft" number of unique items (i.e. mSize) = 5

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  eggplant:1  milk:2  soup:2  tomato:2


at line #8: add tomato
First item: apples:1
Last item: tomato:2


Update at line #9: add onion
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #9: add onion
First item: apples:1
Last item: tomato:2


Update at line #10: add beans
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  beans:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #10: add beans
First item: apples:1
Last item: tomato:2


Update at line #11: add beans
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:2  eggplant:1  milk:2  onion:1  soup:2  tomato:2


at line #11: add beans
First item: apples:1
Last item: tomato:2


Update at line #12: add onion
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  beans:2  eggplant:1  milk:2  onion:2  soup:2  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:2  eggplant:1  milk:2  onion:2  soup:2  tomato:2


at line #12: add onion
First item: apples:1
Last item: tomato:2


Update at line #13: buy apples
"hard" number of unique items (i.e. mSizeHard) = 7
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:0  beans:2  eggplant:1  milk:2  onion:2  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  eggplant:1  milk:2  onion:2  soup:2  tomato:2


at line #13: buy apples
First item: beans:2
Last item: tomato:2

Warning: Unable to fulfill request: at line #14: buy fish
Warning: Item fish is out of stock.

at line #14: buy fish
First item: beans:2
Last item: tomato:2


Update at line #15: add pie
"hard" number of unique items (i.e. mSizeHard) = 8
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:0  beans:2  eggplant:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  eggplant:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #15: add pie
First item: beans:2
Last item: tomato:2


Update at line #16: add cake
"hard" number of unique items (i.e. mSizeHard) = 9
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  eggplant:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  cake:1  eggplant:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #16: add cake
First item: beans:2
Last item: tomato:2


Update at line #17: add fish
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  cake:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #17: add fish
First item: beans:2
Last item: tomato:2


Update at line #18: add chicken
"hard" number of unique items (i.e. mSizeHard) = 11
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  cake:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #18: add chicken
First item: beans:2
Last item: tomato:2


Update at line #19: add cereal
"hard" number of unique items (i.e. mSizeHard) = 12
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2


at line #19: add cereal
First item: beans:2
Last item: tomato:2


Update at line #20: add watermelon
"hard" number of unique items (i.e. mSizeHard) = 13
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2  watermelon:1


at line #20: add watermelon
First item: beans:2
Last item: watermelon:1


Update at line #21: add cookies
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:2  pie:1  soup:2  tomato:2  watermelon:1


at line #21: add cookies
First item: beans:2
Last item: watermelon:1


Update at line #22: buy onion
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:1  soup:2  tomato:2  watermelon:1


at line #22: buy onion
First item: beans:2
Last item: watermelon:1


Update at line #23: buy pie
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  cookies:1  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #23: buy pie
First item: beans:2
Last item: watermelon:1


Update at line #24: buy cookies
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:0  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #24: buy cookies
First item: beans:2
Last item: watermelon:1


Update at line #25: add apples
"hard" number of unique items (i.e. mSizeHard) = 14
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #25: add apples
First item: apples:1
Last item: watermelon:1


Update at line #26: add juice
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:1  beans:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #26: add juice
First item: apples:1
Last item: watermelon:1


Update at line #27: add bread
"hard" number of unique items (i.e. mSizeHard) = 16
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #27: add bread
First item: apples:1
Last item: watermelon:1


Update at line #28: add meat
"hard" number of unique items (i.e. mSizeHard) = 17
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:1  fish:1  juice:1  meat:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:1  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #28: add meat
First item: apples:1
Last item: watermelon:1


Update at line #29: add eggplant
"hard" number of unique items (i.e. mSizeHard) = 17
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  meat:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #29: add eggplant
First item: apples:1
Last item: watermelon:1


Update at line #30: add bread
"hard" number of unique items (i.e. mSizeHard) = 17
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  meat:1  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  meat:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #30: add bread
First item: apples:1
Last item: watermelon:1


Update at line #31: buy meat
"hard" number of unique items (i.e. mSizeHard) = 17
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  meat:0  milk:2  onion:1  pie:0  soup:2  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:2  tomato:2  watermelon:1


at line #31: buy meat
First item: apples:1
Last item: watermelon:1


Update at line #32: add soup
"hard" number of unique items (i.e. mSizeHard) = 17
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  meat:0  milk:2  onion:1  pie:0  soup:3  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:3  tomato:2  watermelon:1


at line #32: add soup
First item: apples:1
Last item: watermelon:1


Update at line #33: add spaghetti
"hard" number of unique items (i.e. mSizeHard) = 18
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #33: add spaghetti
First item: apples:1
Last item: watermelon:1


Update at line #34: add linguine
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #34: add linguine
First item: apples:1
Last item: watermelon:1


Update at line #35: add onion
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:2  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:1  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #35: add onion
First item: apples:1
Last item: watermelon:1


Update at line #36: add cereal
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:2  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #36: add cereal
First item: apples:1
Last item: watermelon:1


Update at line #37: add milk
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:3  onion:2  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:3  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #37: add milk
First item: apples:1
Last item: watermelon:1


Update at line #38: buy milk
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:2  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:2  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #38: buy milk
First item: apples:1
Last item: watermelon:1


Update at line #39: buy bread
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:2  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:2  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #39: buy bread
First item: apples:1
Last item: watermelon:1


Update at line #40: buy beans
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:2  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:2  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #40: buy beans
First item: apples:1
Last item: watermelon:1


Update at line #41: buy onion
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 16

Testing traversing "hard" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:1

Testing traversing "soft" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2  watermelon:1


at line #41: buy onion
First item: apples:1
Last item: watermelon:1


Update at line #42: buy watermelon
"hard" number of unique items (i.e. mSizeHard) = 19
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  cookies:0  eggplant:2  fish:1  juice:1  linguine:1  meat:0  milk:2  onion:1  pie:0  soup:3  spaghetti:1  tomato:2  watermelon:0

Testing traversing "soft" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2


at line #42: buy watermelon
First item: apples:1
Last item: tomato:2

at line #42: buy watermelon
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 15

Testing traversing "hard" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  bread:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2



Update at line #43: buy bread
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 14

Testing traversing "hard" inventory:
apples:1  beans:1  bread:0  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  fish:1  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2


at line #43: buy bread
First item: apples:1
Last item: tomato:2


Update at line #44: buy fish
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 13

Testing traversing "hard" inventory:
apples:1  beans:1  bread:0  cake:1  cereal:2  chicken:1  eggplant:2  fish:0  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  juice:1  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2


at line #44: buy fish
First item: apples:1
Last item: tomato:2


Update at line #45: buy juice
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  beans:1  bread:0  cake:1  cereal:2  chicken:1  eggplant:2  fish:0  juice:0  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:2  onion:1  soup:3  spaghetti:1  tomato:2


at line #45: buy juice
First item: apples:1
Last item: tomato:2


Update at line #46: buy milk
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 12

Testing traversing "hard" inventory:
apples:1  beans:1  bread:0  cake:1  cereal:2  chicken:1  eggplant:2  fish:0  juice:0  linguine:1  milk:1  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  beans:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:1  onion:1  soup:3  spaghetti:1  tomato:2


at line #46: buy milk
First item: apples:1
Last item: tomato:2


Update at line #47: buy beans
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 11

Testing traversing "hard" inventory:
apples:1  beans:0  bread:0  cake:1  cereal:2  chicken:1  eggplant:2  fish:0  juice:0  linguine:1  milk:1  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  milk:1  onion:1  soup:3  spaghetti:1  tomato:2


at line #47: buy beans
First item: apples:1
Last item: tomato:2


Update at line #48: buy milk
"hard" number of unique items (i.e. mSizeHard) = 15
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:1  beans:0  bread:0  cake:1  cereal:2  chicken:1  eggplant:2  fish:0  juice:0  linguine:1  milk:0  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:1  soup:3  spaghetti:1  tomato:2


at line #48: buy milk
First item: apples:1
Last item: tomato:2

at line #48: buy milk
calling garbage collection...

inventory after garbage collection:
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 10

Testing traversing "hard" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:1  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:1  soup:3  spaghetti:1  tomato:2



Update at line #49: buy onion
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 9

Testing traversing "hard" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  onion:0  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cake:1  cereal:2  chicken:1  eggplant:2  linguine:1  soup:3  spaghetti:1  tomato:2


at line #49: buy onion
First item: apples:1
Last item: tomato:2


Update at line #50: buy cake
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:1  cake:0  cereal:2  chicken:1  eggplant:2  linguine:1  onion:0  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cereal:2  chicken:1  eggplant:2  linguine:1  soup:3  spaghetti:1  tomato:2


at line #50: buy cake
First item: apples:1
Last item: tomato:2


Update at line #51: buy eggplant
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 8

Testing traversing "hard" inventory:
apples:1  cake:0  cereal:2  chicken:1  eggplant:1  linguine:1  onion:0  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cereal:2  chicken:1  eggplant:1  linguine:1  soup:3  spaghetti:1  tomato:2


at line #51: buy eggplant
First item: apples:1
Last item: tomato:2


Update at line #52: buy eggplant
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  cake:0  cereal:2  chicken:1  eggplant:0  linguine:1  onion:0  soup:3  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cereal:2  chicken:1  linguine:1  soup:3  spaghetti:1  tomato:2


at line #52: buy eggplant
First item: apples:1
Last item: tomato:2


Update at line #53: buy soup
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  cake:0  cereal:2  chicken:1  eggplant:0  linguine:1  onion:0  soup:2  spaghetti:1  tomato:2

Testing traversing "soft" inventory:
apples:1  cereal:2  chicken:1  linguine:1  soup:2  spaghetti:1  tomato:2


at line #53: buy soup
First item: apples:1
Last item: tomato:2


Update at line #54: buy tomato
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 7

Testing traversing "hard" inventory:
apples:1  cake:0  cereal:2  chicken:1  eggplant:0  linguine:1  onion:0  soup:2  spaghetti:1  tomato:1

Testing traversing "soft" inventory:
apples:1  cereal:2  chicken:1  linguine:1  soup:2  spaghetti:1  tomato:1


at line #54: buy tomato
First item: apples:1
Last item: tomato:1


Update at line #55: buy tomato
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  cake:0  cereal:2  chicken:1  eggplant:0  linguine:1  onion:0  soup:2  spaghetti:1  tomato:0

Testing traversing "soft" inventory:
apples:1  cereal:2  chicken:1  linguine:1  soup:2  spaghetti:1


at line #55: buy tomato
First item: apples:1
Last item: spaghetti:1


State of inventory before cleanup:
"hard" number of unique items (i.e. mSizeHard) = 10
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  cake:0  cereal:2  chicken:1  eggplant:0  linguine:1  onion:0  soup:2  spaghetti:1  tomato:0

Testing traversing "soft" inventory:
apples:1  cereal:2  chicken:1  linguine:1  soup:2  spaghetti:1



Final state of inventory after cleanup:
"hard" number of unique items (i.e. mSizeHard) = 6
"soft" number of unique items (i.e. mSize) = 6

Testing traversing "hard" inventory:
apples:1  cereal:2  chicken:1  linguine:1  soup:2  spaghetti:1

Testing traversing "soft" inventory:
apples:1  cereal:2  chicken:1  linguine:1  soup:2  spaghetti:1


Done with SuperMarket.
